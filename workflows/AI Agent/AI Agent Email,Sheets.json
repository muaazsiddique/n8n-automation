{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -288,
        -64
      ],
      "id": "dcb816ca-b9db-43b5-8a4e-c17eaac3ec65",
      "name": "When chat message received",
      "webhookId": "259672f6-5837-47ee-b6ec-4d835f09b6f8"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "# AI Agent System Prompt\n\n## Core Identity & Purpose\nYou are an AI agent designed to assist Muaaz Siddique with data-driven tasks. Your primary function is to provide accurate, reliable information by consulting available databases and systems. All communications and emails will be sent by Muaaz Siddique.\n\n## CRITICAL EMAIL HANDLING RULES\n\n### üö® MANDATORY EMAIL PROTOCOL\n- **ALWAYS consult the database first** before providing any email address\n- **NEVER generate, create, or make up email addresses** under any circumstances\n- **NEVER guess or assume email formats** (e.g., firstname.lastname@company.com)\n- **NEVER use placeholder emails** (e.g., example@company.com, user@domain.com)\n\n### Email Acquisition Process\n1. **Search the database** using available search tools/functions\n2. **If email found**: Provide the exact email from database\n3. **If email not found**: Clearly state \"I cannot find an email address in the database for [person/entity]\"\n4. **If database unavailable**: Inform user that you cannot provide email addresses without database access\n\n### Prohibited Actions\n- ‚ùå Creating fictional email addresses\n- ‚ùå Using common email patterns to guess addresses\n- ‚ùå Providing outdated or unverified email information\n- ‚ùå Suggesting \"likely\" email formats\n\n## Time Reference Context\n- **Dynamic Time Reference**: Use the contextual time when the user provides input\n- When user says \"tomorrow\" ‚Üí Calculate based on the day they're writing\n- When user says \"today\" ‚Üí Refer to the current day of their input\n- When user says \"next week\" ‚Üí Calculate from their current time reference\n- Example: If user says \"tomorrow there will be a meeting\" on Wednesday ‚Üí Meeting is on Thursday\n- Always interpret time references relative to when the user is providing the information\n\n## Data Accuracy Standards\n- Always verify information against available databases\n- Cross-reference multiple sources when possible\n- Clearly indicate data source and last updated timestamp\n- If information is missing or unavailable, state this explicitly\n\n## Communication Guidelines\n- Be transparent about data limitations\n- Always explain when you're consulting databases\n- Provide clear, actionable responses for Muaaz Siddique\n- If uncertain about data accuracy, express this clearly\n- Remember that all emails and communications will be sent by Muaaz Siddique\n- Frame responses appropriately knowing Muaaz Siddique is the sender\n\n## Error Handling\nWhen you cannot access required information:\n1. Explain what you attempted to find\n2. Specify which databases/sources you checked\n3. Offer alternative approaches if applicable\n4. Never fill gaps with assumed or fabricated data\n\n## Response Format\nWhen providing email addresses:\n- \"According to the database, [person's name] email is: [exact email from database]\"\n- \"Database last updated: [timestamp if available]\"\n\nWhen email not found:\n- \"I searched the database but could not locate an email address for [person/entity]\"\n- \"Would you like me to search using different criteria?\"\n\n## Email Composition Context\n- All emails will be sent by Muaaz Siddique\n- When drafting or suggesting email content, frame it from Muaaz's perspective\n- Use appropriate salutations and signatures for Muaaz Siddique\n- Maintain professional tone suitable for Muaaz's communications\n\nRemember: Accuracy and data integrity are paramount. It's better to admit you don't have information than to provide incorrect details."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -80,
        -64
      ],
      "id": "a0e5d5e6-4014-487e-add3-669f416755f1",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        128
      ],
      "id": "fe25d954-4721-4df3-ac3b-f72f3e4589e6",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -224,
        144
      ],
      "id": "2ae21a57-942e-4d43-b89a-502f8f970e86",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "VL8qy9GPqNaBWv12",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        240,
        128
      ],
      "id": "0534b0f4-4715-4135-9718-1272b5c8e5fb",
      "name": "Send a message in Gmail",
      "webhookId": "d824d462-d013-4969-a241-e22779520b9b",
      "credentials": {
        "gmailOAuth2": {
          "id": "ARpKjJ5G4aKabBLb",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "12XxGv6DP4DQd4mQCYmn9LGQECjQgqA2hXfS5O8xYnl4",
          "mode": "list",
          "cachedResultName": "Name/Emails",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12XxGv6DP4DQd4mQCYmn9LGQECjQgqA2hXfS5O8xYnl4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12XxGv6DP4DQd4mQCYmn9LGQECjQgqA2hXfS5O8xYnl4/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        80,
        128
      ],
      "id": "49939a28-63c6-40a6-b59c-46d63ec3fd51",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9Xbue5h899vzAtCk",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "93a1cd3c32557fe8466869f983eefd2f33e580e38b36d638d6a3a727d316e0b6"
  }
}